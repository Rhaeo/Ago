@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Ago</title>
    <script src="/Scripts/Libraries/jquery-1.10.2.min.js"></script>
    <script src="/Scripts/Libraries/jquery.signalR-2.2.0.min.js"></script>
    <script src="/SignalR/Hubs"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/rollups/aes.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/rollups/pbkdf2.js"></script>
    <script>
        var iterations = 100;

        var decryptCache = {};

        var encrypt = (cleartext, passphrase) => {
            const salt = CryptoJS.lib.WordArray.random(128 / 8);
            const key = CryptoJS.PBKDF2(passphrase, salt, { keySize: 512 / 32, iterations });
            const iv = CryptoJS.lib.WordArray.random(128 / 8);
            const crypto = CryptoJS.AES.encrypt(cleartext,
                key,
                { iv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 });
            return { cyphertext: crypto.toString(), salt: salt.toString(), iv: iv.toString() };
        };

        var decrypt = (cyphertext, passphrase, salt, iv) => {
            if (decryptCache[cyphertext + passphrase + salt + iv] !== undefined) {
                return decryptCache[cyphertext + passphrase + salt + iv];
            }

            const key = CryptoJS.PBKDF2(passphrase, CryptoJS.enc.Hex.parse(salt), { keySize: 512 / 32, iterations });
            const crypto = CryptoJS.AES.decrypt(cyphertext,
                key,
                { iv: CryptoJS.enc.Hex.parse(iv), mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 });
            decryptCache[cyphertext + passphrase + salt + iv] = crypto.toString(CryptoJS.enc.Utf8);
            return crypto.toString(CryptoJS.enc.Utf8);
        };
    </script>
    <script data-main="/Scripts/Ago.js" src="~/Scripts/Libraries/require@2.2.0.min.js"></script>
    <script>
        require.config({
            paths: {
                "react": "/Scripts/Libraries/react@15.0.1.min",
                "react-dom": "/Scripts/Libraries/react-dom@15.0.1.min",
                "redux": "/Scripts/Libraries/redux@3.5.2.min"
            }
        });
    </script>
</head>
<body style="display: flex; flex-direction: column; margin: 0;">
    <div id="Ago"></div>
</body>
</html>
